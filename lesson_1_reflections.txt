How did viewing a diff between two versions of a file help you see the bug that was introduced?
- Only shows the lines that are different
- Instead of hundreds or thousands of lines it only shows a few

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
- Find bugs faster or be able to revert to old code
- Reuse code that was in an older version
- Help me understand the changes made in the past to achieve a certain result

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
- The manual commits are better structured as each has it's own reason
- Con: You might forget to commit and loose work or make too many changes

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
- COde changes may have interdependencies and therefore require changes to multiple files.
- Interdependencies may not be as relevant in Documents

How can you use the commands git log and git diff to view the history of files?
- git log shows the list of commits with the time stamp and the commit message
- With git diff the difference between two commits can be shown

How might using version control make you more confident to make changes that could break something?
- you can always revert back to an earlier version


